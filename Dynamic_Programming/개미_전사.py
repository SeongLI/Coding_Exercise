# 개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 한다. 메뚜기 마을에는 여러 개의 식량창고가 일직선으로 이어져있다.
# 각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미 전사는 식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다.
# 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.

n = int(input())
# 모든 식량 정보 입력 받기
array = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 100       # 문제에서 최대 100개로 정한 것.

# 다이나믹 프로그래밍(Dynamic Programming) 진행 : 바텀업
d[0] = array[0]
d[1] = max(array[0], array[1])
for i in range(2, n) :
    d[i] = max(d[i-1], d[i-2]+ array[i])

print(d[n-1])